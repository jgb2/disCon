#remove duplicated ips and workers who do not pass the training threshold
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
# Training threshold check for data_pilot_another
data_pilot_another %>%
filter(phase == 'training') %>%
group_by(workerid) %>%
summarise(correct = mean(correct_item))
drop <- data_pilot_another %>%
filter(phase == 'training') %>%
group_by(workerid) %>%
summarise(correct = mean(correct_item)) %>%
filter(correct < 0.83) %>%
pull(workerid)
data_pilot_another <- data_pilot_another %>%
filter(!workerid %in% drop)
# IP check for data_recency
data_recency <- data_recency %>%
distinct(workerIp, trial, slide, .keep_all = TRUE)
# Training threshold check for data_recency
data_recency %>%
filter(phase == 'training') %>%
group_by(workerid) %>%
summarise(correct = mean(correct_item))
drop <- data_recency %>%
filter(phase == 'training') %>%
group_by(workerid) %>%
summarise(correct = mean(correct_item)) %>%
filter(correct < 0.83) %>%
pull(workerid)
data_recency <- data_recency %>%
filter(!workerid %in% drop)
data_recency
#Libraries
knitr::opts_chunk$set(echo = FALSE, warning = FALSE) #no code, no warning printed
library(knitr)
library(tidyverse)
library(ggplot2)
library(jsonlite)
library(tidyr)
library(stringr)
library(dplyr)
library(ggthemes)
library(langcog)
#Libraries
knitr::opts_chunk$set(echo = FALSE, warning = FALSE) #no code, no warning printed
library(knitr)
library(tidyverse)
library(ggplot2)
library(jsonlite)
library(tidyr)
library(stringr)
library(dplyr)
library(ggthemes)
library(langcog)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
#Pilot data preprocessing
files <- dir("../../pilot_1_raw_data/production-results")
raw_data <- data_frame()
for (f in files) {
jf <- paste("../../pilot_1_raw_data/production-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- as_data_frame(jd$answers$data$data) %>%
mutate(workerid = jd$WorkerId)
raw_data <- bind_rows(raw_data, id)
}
data_pilot_another <- raw_data %>%
mutate(distribution = as.character(distribution),
distribution = factor(distribution, levels = c("c(6, 0, 0)", "c(4, 2, 0)", "c(2, 2, 2)")))
#Recency "Here's another one" data preprocessing
files <- dir("../../recency_raw_data/production-results")
raw_data <- data_frame()
for (f in files) {
jf <- paste("../../recency_raw_data/production-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- as_data_frame(jd$answers$data$data) %>%
mutate(workerid = jd$WorkerId)
raw_data <- bind_rows(raw_data, id)
}
data_recency_another <- raw_data %>%
mutate(distribution = as.character(distribution),
distribution = factor(distribution, levels = c("c(5, 1, 0)", "c(2, 2, 2)")))
data_ip <- data_recency_another %>%
filter(phase == 'training') %>%
group_by(workerIp) %>%
summarise(correct = mean(correct_item))
data_recency_another <- data_recency_another %>%
distinct(workerIp, trial, slide, .keep_all = TRUE)
#Recency "Here's the last one." data preprocessing
files <- dir("../../recency_last_raw_data/production-results")
raw_data <- data_frame()
for (f in files) {
jf <- paste("../../recency_last_raw_data/production-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- as_data_frame(jd$answers$data$data) %>%
mutate(workerid = jd$WorkerId)
raw_data <- bind_rows(raw_data, id)
}
data_recency_last <- raw_data %>%
mutate(distribution = as.character(distribution),
distribution = factor(distribution, levels = c("c(5, 1, 0)", "c(2, 2, 2)")))
data_ip <- data_recency_last %>%
filter(phase == 'training') %>%
group_by(workerIp) %>%
summarise(correct = mean(correct_item))
data_recency_last <- data_recency_last %>%
distinct(workerIp, trial, slide, .keep_all = TRUE)
#Recency look data preprocessing
files <- dir("../../recency_look_raw_data/production-results")
raw_data <- data_frame()
for (f in files) {
jf <- paste("../../recency_look_raw_data/production-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- as_data_frame(jd$answers$data$data) %>%
mutate(workerid = jd$WorkerId)
raw_data <- bind_rows(raw_data, id)
}
data_recency_look <- raw_data %>%
mutate(distribution = as.character(distribution),
distribution = factor(distribution, levels = c("c(5, 1, 0)", "c(2, 2, 2)")))
data_ip <- data_recency_look %>%
filter(phase == 'training') %>%
group_by(workerIp) %>%
summarise(correct = mean(correct_item))
data_recency_look <- data_recency_look %>%
distinct(workerIp, trial, slide, .keep_all = TRUE)
#Combine recency data
data_recency <- bind_rows(data_recency_another, data_recency_last, data_recency_look)
#remove duplicated ips and workers who do not pass the training threshold
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
# Training threshold check for data_pilot_another
data_pilot_another %>%
filter(phase == 'training') %>%
group_by(workerid) %>%
summarise(correct = mean(correct_item))
drop <- data_pilot_another %>%
filter(phase == 'training') %>%
group_by(workerid) %>%
summarise(correct = mean(correct_item)) %>%
filter(correct < 0.83) %>%
pull(workerid)
data_pilot_another <- data_pilot_another %>%
filter(!workerid %in% drop)
# IP check for data_recency
data_recency <- data_recency %>%
distinct(workerIp, trial, slide, .keep_all = TRUE)
# Training threshold check for data_recency
data_recency %>%
filter(phase == 'training') %>%
group_by(workerid) %>%
summarise(correct = mean(correct_item))
drop <- data_recency %>%
filter(phase == 'training') %>%
group_by(workerid) %>%
summarise(correct = mean(correct_item)) %>%
filter(correct < 0.83) %>%
pull(workerid)
data_recency <- data_recency %>%
filter(!workerid %in% drop)
# summarise all unique ips across 3 experiments (do this after general description of task)
data_pilot_another %>%
distinct(workerid, trial, slide, .keep_all = TRUE) %>%
summarise(n = n()) %>%
kable()
data_pilot_another
sample_size <- data_pilot_another %>%
distinct(workerIp, .keep_all = TRUE))
sample_size <- data_pilot_another %>%
distinct(workerIp, .keep_all = TRUE)
sample_size
sample_size <- data_pilot_another %>%
distinct(workerIp, .keep_all = TRUE)
sample_size
sample_size <- data_pilot_another %>%
distinct(workerIp, trial, slide .keep_all = TRUE)
sample_size
sample_size
?distinct
data_pilot_another %>%
summarise(n = nrow(distinct(workerid))) %>%
kable()
data_pilot_another %>%
summarise(n = nrow(distinct(workerid))) %>%
kable()
data_pilot_another %>%
summarise(n = n(workerid)) %>%
kable()
sample_size <- data_pilot_another %>%
distinct(workerid, trial, slide, .keep_all = TRUE)
sample_size
sample_size <- data_pilot_another %>%
distinct(workerid, trial, slide, .keep_all = FALSE)
sample_size
sample_size <- data_pilot_another %>%
distinct(workerid, .keep_all = FALSE)
sample_size
sample_size <- data_pilot_another %>%
distinct(workerid, trial .keep_all = FALSE)
sample_size
sample_size
sample_size
sample_size <- data_pilot_another %>%
distinct(workerid, trial, slide .keep_all = FALSE)
sample_size <- data_pilot_another %>%
distinct(workerid, trial,  .keep_all = FALSE)
sample_size
sample_size <- data_pilot_another %>%
distinct(workerid, trial, = FALSE)
sample_size <- data_pilot_another %>%
distinct(workerid, trial, = FALSE)
sample_size <- data_pilot_another %>%
distinct(workerid,  .keep_all = FALSE)
sample_size
sample_size %>%
summarise(n = n()) %>%
kable()
sample_size <- data_pilot_another %>%
distinct(workerid, keep_all = FALSE)
sample_size %>%
summarise(n = n()) %>%
kable()
sample_size <- data_pilot_another %>%
distinct(workerid, .keep_all = TRUE)
sample_size %>%
summarise(n = n()) %>%
kable()
files <- dir("../../pilot_1_raw_data/production-results")
raw_data <- data_frame()
for (f in files) {
jf <- paste("../../pilot_1_raw_data/production-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- as_data_frame(jd$answers$data$data) %>%
mutate(workerid = jd$WorkerId)
raw_data <- bind_rows(raw_data, id)
}
data <- raw_data %>%
mutate(distribution = as.character(distribution),
distribution = factor(distribution, levels = c("c(6, 0, 0)", "c(4, 2, 0)", "c(2, 2, 2)")))
plot1 <- data_pilot_another %>%
filter(phase == 'test') %>%
group_by(distribution, workerid) %>%
summarise(correct = mean(correct_target1),
correct2 = mean(correct_target2),
correct3 = mean(correct_target3)) %>%
gather(item, prop_correct, -distribution, -workerid) %>%
group_by(distribution, item) %>%
multi_boot_standard(col = "prop_correct")
ggplot(plot1,
aes(x = item, y=mean, fill=item)) +
geom_bar(stat='identity') +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
scale_fill_solarized(name = "Chosen item",
breaks = c("correct", "correct2", "correct3"),
labels = c("most frequent", "second most frequent", "least frequent"))+
facet_grid(~distribution,
labeller = as_labeller(c(`c(6, 0, 0)` = "Distribution\n(6-0-0)", `c(4, 2, 0)` = "Distribution\n(4-2-0)", `c(2, 2, 2)` = "Distribution\n(2-2-2)", preference = "preference", statistical = "statistical"))) +
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
labs(x="", y= "proportion chosen")
### Finding
```{r plot1, fig.height = 3, fig.width = 5,  echo=FALSE}
plot1 <- data_pilot_another %>%
filter(phase == 'test') %>%
group_by(distribution, workerid) %>%
summarise(correct = mean(correct_target1),
correct2 = mean(correct_target2),
correct3 = mean(correct_target3)) %>%
gather(item, prop_correct, -distribution, -workerid) %>%
group_by(distribution, item) %>%
multi_boot_standard(col = "prop_correct")
ggplot(plot1,
aes(x = item, y=mean, fill=item)) +
geom_bar(stat='identity') +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
scale_fill_solarized(name = "Chosen item",
breaks = c("correct", "correct2", "correct3"),
labels = c("most frequent", "second most frequent", "least frequent"))+
facet_grid(~distribution,
labeller = as_labeller(c(`c(6, 0, 0)` = "Distribution\n(6-0-0)", `c(4, 2, 0)` = "Distribution\n(4-2-0)", `c(2, 2, 2)` = "Distribution\n(2-2-2)", preference = "preference", statistical = "statistical"))) +
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
labs(x="", y= "proportion chosen")
sample_size
data_pilot_another
plot1 <- data_pilot_another %>%
filter(phase == 'test') %>%
group_by(distribution, workerid) %>%
summarise(correct = mean(correct_target1),
correct2 = mean(correct_target2),
correct3 = mean(correct_target3)) %>%
gather(item, prop_correct, -distribution, -workerid) %>%
group_by(distribution, item) %>%
multi_boot_standard(col = "prop_correct")
ggplot(plot1,
aes(x = item, y=mean, fill=item)) +
geom_bar(stat='identity') +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
scale_fill_solarized(name = "Chosen item",
breaks = c("correct", "correct2", "correct3"),
labels = c("most frequent", "second most frequent", "least frequent"))+
facet_grid(~distribution,
labeller = as_labeller(c(`c(6, 0, 0)` = "Distribution\n(6-0-0)", `c(4, 2, 0)` = "Distribution\n(4-2-0)", `c(2, 2, 2)` = "Distribution\n(2-2-2)", preference = "preference", statistical = "statistical"))) +
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
labs(x="", y= "proportion chosen")
plot1 <- data_pilot_another %>%
filter(phase == 'test') %>%
group_by(distribution, workerid) %>%
summarise(correct = mean(correct_target1),
correct2 = mean(correct_target2),
correct3 = mean(correct_target3)) %>%
gather(item, prop_correct, -distribution, -workerid) %>%
group_by(distribution, item) %>%
multi_boot_standard(col = "prop_correct")
ggplot(plot1,
aes(x = item, y=mean, fill=item)) +
geom_bar(stat='identity') +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
scale_fill_solarized(name = "Chosen item",
breaks = c("correct", "correct2", "correct3"),
labels = c("most frequent", "second most frequent", "least frequent"))+
facet_grid(~distribution,
labeller = as_labeller(c(`c(6, 0, 0)` = "Distribution\n(6-0-0)", `c(4, 2, 0)` = "Distribution\n(4-2-0)", `c(2, 2, 2)` = "Distribution\n(2-2-2)", preference = "preference", statistical = "statistical"))) +
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
labs(x="", y= "proportion chosen")
### Finding
```{r plot1, fig.width = 8, echo=FALSE}
plot1 <- data_pilot_another %>%
filter(phase == 'test') %>%
group_by(distribution, workerid) %>%
summarise(correct = mean(correct_target1),
correct2 = mean(correct_target2),
correct3 = mean(correct_target3)) %>%
gather(item, prop_correct, -distribution, -workerid) %>%
group_by(distribution, item) %>%
multi_boot_standard(col = "prop_correct")
ggplot(plot1,
aes(x = item, y=mean, fill=item)) +
geom_bar(stat='identity') +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
scale_fill_solarized(name = "Chosen item",
breaks = c("correct", "correct2", "correct3"),
labels = c("most frequent", "second most frequent", "least frequent"))+
facet_grid(~distribution,
labeller = as_labeller(c(`c(6, 0, 0)` = "Distribution\n(6-0-0)", `c(4, 2, 0)` = "Distribution\n(4-2-0)", `c(2, 2, 2)` = "Distribution\n(2-2-2)", preference = "preference", statistical = "statistical"))) +
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
labs(x="", y= "proportion chosen")
plot2 <- data_pilot_another %>%
filter(phase == "test", distribution != "c(6, 0, 0)") %>%
mutate(trackLast = ifelse(lastInputCat == target1, "yes", "no")) %>%
group_by (distribution, workerid) %>%
summarise (lastInput = mean(same_lastInput),
n = n()) %>%
multi_boot_standard(col = "lastInput")
ggplot(plot2,
aes(x = distribution, y = mean, fill = distribution)) +
geom_bar(stat='identity', width = 0.3) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few()
plot2 <- data_pilot_another %>%
filter(phase == "test", distribution != "c(6, 0, 0)") %>%
group_by (distribution, workerid) %>%
summarise (lastInput = mean(same_lastInput),
n = n()) %>%
multi_boot_standard(col = "lastInput")
ggplot(plot2,
aes(x = distribution, y = mean, fill = distribution)) +
geom_bar(stat='identity', width = 0.3) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few()
ggplot(plot2,
aes(x = distribution, y = mean, fill = distribution)) +
geom_bar(stat='identity', width = 0.3) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
scale_fill_solarized()
ggplot(plot2,
aes(x = distribution, y = mean, fill = distribution)) +
geom_bar(stat='identity', width = 0.3) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
scale_fill_solarized() +
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few()
ggplot(plot1,
aes(x = item, y=mean, fill=item)) +
geom_bar(stat='identity') +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
scale_fill_solarized(name = "Chosen item",
breaks = c("correct", "correct2", "correct3"),
labels = c("most frequent", "second most frequent", "least frequent"))+
facet_grid(~distribution,
labeller = as_labeller(c(`c(6, 0, 0)` = "Distribution\n(6-0-0)", `c(4, 2, 0)` = "Distribution\n(4-2-0)", `c(2, 2, 2)` = "Distribution\n(2-2-2)"))) +
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
labs(x="", y= "proportion chosen")
ggplot(plot2,
aes(x = distribution, y = mean, fill = distribution)) +
geom_bar(stat='identity', width = 0.3) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
scale_fill_solarized(name = "Distribution",
breaks = c("c(6, 0, 0)", "c(4, 2, 0)", "c(2, 2, 2)"),
labels = c("most frequent", "second most frequent", "least frequent"))+
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few()
ggplot(plot2,
aes(x = distribution, y = mean, fill = distribution)) +
geom_bar(stat='identity', width = 0.3) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
scale_fill_solarized(name = "Distribution",
breaks = c("c(6, 0, 0)", "c(4, 2, 0)", "c(2, 2, 2)"),
labels = c("(6-0-0)", "(4-2-0)", "(4-2-0)"))+
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few()
ggplot(plot2,
aes(x = distribution, y = mean, fill = distribution)) +
geom_bar(stat='identity', width = 0.3) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
scale_fill_solarized(name = "Distribution",
breaks = c("c(6, 0, 0)", "c(4, 2, 0)", "c(2, 2, 2)"),
labels = c("(6-0-0)", "(4-2-0)", "(2-2-2)"))+
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few()
?theme
ggplot(plot2,
aes(x = distribution, y = mean, fill = distribution)) +
geom_bar(stat='identity', width = 0.3) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
scale_fill_solarized(name = "Distribution",
breaks = c("c(6, 0, 0)", "c(4, 2, 0)", "c(2, 2, 2)"),
labels = c("(6-0-0)", "(4-2-0)", "(2-2-2)"))+
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few() +
theme(axis.text.x = element_blank(), axis.ticks.x = c(`c(6, 0, 0)` = "Distribution\n(6-0-0)", `c(4, 2, 0)` = "Distribution\n(4-2-0)", `c(2, 2, 2)` = "Distribution\n(2-2-2)")))
ggplot(plot2,
aes(x = distribution, y = mean, fill = distribution)) +
geom_bar(stat='identity', width = 0.3) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
scale_fill_solarized(name = "Distribution",
breaks = c("c(6, 0, 0)", "c(4, 2, 0)", "c(2, 2, 2)"),
labels = c("(6-0-0)", "(4-2-0)", "(2-2-2)"))+
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few() +
theme(axis.text.x = element_blank(), axis.ticks.x = c(`c(6, 0, 0)` = "Distribution\n(6-0-0)", `c(4, 2, 0)` = "Distribution\n(4-2-0)", `c(2, 2, 2)` = "Distribution\n(2-2-2)"))
ggplot(plot2,
aes(x = distribution, y = mean, fill = distribution)) +
geom_bar(stat='identity', width = 0.3) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
scale_fill_solarized(name = "Distribution",
breaks = c("c(6, 0, 0)", "c(4, 2, 0)", "c(2, 2, 2)"),
labels = c("(6-0-0)", "(4-2-0)", "(2-2-2)"))+
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(plot2,
aes(x = distribution, y = mean, fill = distribution)) +
geom_bar(stat='identity', width = 0.3) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
scale_fill_solarized(name = "Distribution",
breaks = c("c(6, 0, 0)", "c(4, 2, 0)", "c(2, 2, 2)"),
labels = c("(6-0-0)", "(4-2-0)", "(2-2-2)"))+
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
labs(x="distribution", y= "proportion chosen same as last item")
ggplot(plot2,
aes(x = distribution, y = mean, fill = distribution)) +
geom_bar(stat='identity', width = 0.3) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
scale_fill_solarized(name = "Distribution",
breaks = c("c(6, 0, 0)", "c(4, 2, 0)", "c(2, 2, 2)"),
labels = c("(6-0-0)", "(4-2-0)", "(2-2-2)"))+
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few() +
# theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
labs(x="distribution", y= "proportion chosen same as last item")
ggplot(plot2,
aes(x = distribution, y = mean, fill = distribution)) +
geom_bar(stat='identity', width = 0.3) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
scale_fill_solarized(name = "Distribution",
breaks = c("c(6, 0, 0)", "c(4, 2, 0)", "c(2, 2, 2)"),
labels = c("(6-0-0)", "(4-2-0)", "(2-2-2)"))+
geom_hline(yintercept = 1/3, lty=2) +
ylim(0, 1) +
theme_few() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
labs(x="distribution", y= "proportion chosen same as last item")
